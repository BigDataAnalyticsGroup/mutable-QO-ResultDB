description: Acyclic Optimize Job Query Q17a with RESULTDB
suite: job
benchmark: Acyclic RESULTDB Optimization times with JOB
name: Q17a
readonly: true
chart:
    x:
        scale: linear
        type: O
        label: Scale factor
    y:
        scale: linear
        type: Q
        label: 'Optimization Time [ms]'
data:
    'cast_info':
      file: 'benchmark/job/data/cast_info.csv'
      format: 'csv'
      delimiter: ','
      header: 0
      attributes:
        'id': 'INT NOT NULL'
        'person_id': 'INT NOT NULL'
        'movie_id': 'INT NOT NULL'
        'person_role_id': 'INT'
        'note': 'CHAR 18'
        'nr_order': 'INT'
        'role_id': 'INT NOT NULL'
    'company_name': # Name of this table.
      file: 'benchmark/job/data/company_name.csv'       # Relative path to the file containing the table data
      format: 'csv'                                     # Format of the file. Optional, defaults to 'csv'.
      delimiter: ','                                    # Delimiter of the file. Optional, defaults to ','.
      header: 0                                         # Whether the file has a header line. 1=true, 0=false. Optional, defaults to 0.
      attributes: # Map from attribute name to its type.
        'id': 'INT NOT NULL'
        'name': 'CHAR 74 NOT NULL'
        'country_code': 'CHAR 255'
        'imdb_id': 'INT'
        'name_pcode_nf': 'CHAR 5'
        'name_pcode_sf': 'CHAR 5'
        'md5sum': 'CHAR 32'
    'keyword':
      file: 'benchmark/job/data/keyword.csv'
      format: 'csv'
      delimiter: ','
      header: 0
      attributes:
        'id': 'INT NOT NULL'
        'keyword': 'CHAR 74 NOT NULL'
        'phonetic_code': 'CHAR 5'
    'movie_companies':
      file: 'benchmark/job/data/movie_companies.csv'
      format: 'csv'
      delimiter: ','
      header: 0
      attributes:
        'id': 'INT NOT NULL'
        'movie_id': 'INT NOT NULL'
        'company_id': 'INT NOT NULL'
        'company_type_id': 'INT NOT NULL'
        'note': 'CHAR 208'
    'movie_keyword':
      file: 'benchmark/job/data/movie_keyword.csv'
      format: 'csv'
      delimiter: ','
      header: 0
      attributes:
        'id': 'INT NOT NULL'
        'movie_id': 'INT NOT NULL'
        'keyword_id': 'INT NOT NULL'
    'name':
        file: 'benchmark/job/data/name.csv'
        format: 'csv'
        delimiter: ','
        header: 0
        attributes:
          'id': 'INT NOT NULL'
          'name': 'CHAR 106 NOT NULL'
          'imdb_index': 'CHAR 12'
          'imdb_id': 'INT'
          'gender': 'CHAR 1'
          'name_pcode_cf': 'CHAR 5'
          'name_pcode_nf': 'CHAR 5'
          'surname_pcode': 'CHAR 5'
          'md5sum': 'CHAR 32'
    'title':
        file: 'benchmark/job/data/title.csv'
        format: 'csv'
        delimiter: ','
        header: 0
        attributes:
            'id': 'INT NOT NULL'
            'title': 'CHAR 334 NOT NULL'
            'imdb_index': 'CHAR 12'
            'kind_id': 'INT NOT NULL'
            'production_year': 'INT'
            'imdb_id': 'INT'
            'phonetic_code': 'CHAR 5'
            'episode_of_id': 'INT'
            'season_nr': 'INT'
            'episode_nr': 'INT'
            'series_years': 'CHAR 49'
            'md5sum': 'CHAR 32'



systems:
    mutable:
        args: >-
          --backend WasmV8
          --no-simd
          --cardinality-estimator Injected
          --use-cardinality-file benchmark/job/result-db-eval/acyclic/q17a_acyclic_injected_cardinalities.json
        configurations:
            'Single-Table':
              args: >-
                --backend WasmV8
              pattern:
                Optimization Time (logical): '^Compute the logical query plan:.*'
                Execution Time: '^Execute query:.*'
            'RESULTDB, NoOpt':
                args: >-
                  --result-db
                pattern:
                  Optimization Time (logical): '^Compute the logical query plan:.*'
                  Execution Time: '^Execute query:.*'
            'RESULTDB, Opt, NoGreedyCuts':
                args: >-
                  --result-db
                  --optimize-result-db
                pattern:
                  Optimization Time (logical): '^Compute the logical query plan:.*'
                  Execution Time: '^Execute query:.*'
            'RESULTDB, Opt, GreedyCuts':
              args: >-
                --result-db
                --optimize-result-db
                --greedy-cuts
              pattern:
                Optimization Time (logical): '^Compute the logical query plan:.*'
                Execution Time: '^Execute query:.*'
        cases:
            1:
              SELECT n.name
              FROM cast_info AS ci,
                    company_name AS cn,
                    keyword AS k,
                    movie_companies AS mc,
                    movie_keyword AS mk,
                    name AS n,
                    title AS t
              WHERE cn.country_code = "[us]"
                    AND k.keyword = "character-name-in-title"
                    AND n.id = ci.person_id
                    AND ci.movie_id = t.id
                    AND t.id = mk.movie_id
                    AND mk.keyword_id = k.id
                    AND t.id = mc.movie_id
                    AND mc.company_id = cn.id
                    AND ci.movie_id = mc.movie_id
                    AND ci.movie_id = mk.movie_id
                    AND mc.movie_id = mk.movie_id;