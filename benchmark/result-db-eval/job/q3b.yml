description: Optimize Job Query Q3b with RESULTDB
suite: job
benchmark: RESULTDB Optimization times with JOB
name: Q3b
readonly: true
chart:
    x:
        scale: linear
        type: O
        label: Scale factor
    y:
        scale: linear
        type: Q
        label: 'Optimization Time [ms]'
data:
    'keyword':
        file: 'benchmark/job/data/keyword.csv'
        format: 'csv'
        delimiter: ','
        header: 0
        attributes:
          'id': 'INT NOT NULL'
          'keyword': 'CHAR 74 NOT NULL'
          'phonetic_code': 'CHAR 5'
    'movie_info':
        file: 'benchmark/job/data/movie_info.csv'
        format: 'csv'
        delimiter: ','
        header: 0
        attributes:
          'id': 'INT NOT NULL'
          'movie_id': 'INT NOT NULL'
          'info_type_id': 'INT NOT NULL'
          'info': 'CHAR 43 NOT NULL'
          'note': 'CHAR 19'
    'movie_keyword':
        file: 'benchmark/job/data/movie_keyword.csv'
        format: 'csv'
        delimiter: ','
        header: 0
        attributes:
          'id': 'INT NOT NULL'
          'movie_id': 'INT NOT NULL'
          'keyword_id': 'INT NOT NUL'
    'title':
        file: 'benchmark/job/data/title.csv'
        format: 'csv'
        delimiter: ','
        header: 0
        attributes:
            'id': 'INT NOT NULL'
            'title': 'CHAR 100 NOT NULL'
            'imdb_index': 'CHAR 12'
            'kind_id': 'INT NOT NULL'
            'production_year': 'INT'
            'imdb_id': 'INT'
            'phonetic_code': 'CHAR 5'
            'episode_of_id': 'INT'
            'season_nr': 'INT'
            'episode_nr': 'INT'
            'series_years': 'CHAR 49'
            'md5sum': 'CHAR 32'


systems:
    mutable:
        args: >-
          --backend WasmV8
          --no-simd
          --cardinality-estimator Injected
          --use-cardinality-file benchmark/result-db-eval/job/q3b_injected_cardinalities.json
        configurations:
          'ResultDB-Heuristic':
            args: >-
              --result-db
            pattern:
              Execution Time: '^Execute machine code:.*'
          'DP_Fold':
            args: >-
              --result-db
              --optimize-result-db
              --dp_fold
            pattern:
              Execution Time: '^Execute machine code:.*'
          'DP_Fold-Greedy':
            args: >-
              --result-db
              --optimize-result-db
              --dp_fold_greedy
            pattern:
              Execution Time: '^Execute machine code:.*'
          'DP_ResultDB':
            args: >-
              --result-db
              --optimize-result-db
              --dp_resultdb
            pattern:
              Execution Time: '^Execute machine code:.*'
          'Decompose':
            args: >-
              --decompose
            pattern:
              Execution Time: '^Execute machine code:.*'
        cases:
            1:  SELECT t.title
                FROM keyword AS k,
                     movie_info AS mi,
                     movie_keyword AS mk,
                     title AS t
                WHERE mi.info = "Bulgaria"
                  AND t.production_year > 2010
                  AND t.id = mi.movie_id
                  AND t.id = mk.movie_id
                  AND mk.movie_id = mi.movie_id
                  AND k.id = mk.keyword_id;