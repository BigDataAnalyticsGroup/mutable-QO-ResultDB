description: Optimize Job Query Q6a with RESULTDB
suite: job
benchmark: RESULTDB Optimization times with JOB
name: Q6a
readonly: true
chart:
    x:
        scale: linear
        type: O
        label: Scale factor
    y:
        scale: linear
        type: Q
        label: 'Optimization Time [ms]'
data:                                                     # Definition of the tables this experiment uses.
    'keyword':
        file: 'benchmark/job/data/keyword.csv'
        format: 'csv'
        delimiter: ','
        header: 0
        attributes:
            'id': 'INT NOT NULL'
            'keyword': 'CHAR 10 NOT NULL'
            'phonetic_code': 'CHAR 5'
    'movie_keyword':
        file: 'benchmark/job/data/movie_keyword.csv'
        format: 'csv'
        delimiter: ','
        header: 0
        attributes:
            'id': 'INT NOT NULL'
            'movie_id': 'INT NOT NULL'
            'keyword_id': 'INT NOT NULL'
    'cast_info':
      file: 'benchmark/job/data/cast_info.csv'
      format: 'csv'
      delimiter: ','
      header: 0
      attributes:
        'id': 'INT NOT NULL'
        'person_id': 'INT NOT NULL'
        'movie_id': 'INT NOT NULL'
        'person_role_id': 'INT'
        'note': 'CHAR 10'
        'nr_order': 'INT'
        'role_id': 'INT NOT NULL'
    'name':
      file: 'benchmark/job/data/name.csv'
      format: 'csv'
      delimiter: ','
      header: 0
      attributes:
        'id': 'INT NOT NULL'
        'name': 'CHAR 10 NOT NULL'
        'imdb_index': 'CHAR 10'
        'imdb_id': 'INT'
        'gender': 'CHAR 1'
        'name_pcode_cf': 'CHAR 5'
        'name_pcode_nf': 'CHAR 5'
        'surname_pcode': 'CHAR 5'
        'md5sum': 'CHAR 10'
    'title':
        file: 'benchmark/job/data/title.csv'
        format: 'csv'
        delimiter: ','
        header: 0
        attributes:
            'id': 'INT NOT NULL'
            'title': 'CHAR 10 NOT NULL'
            'imdb_index': 'CHAR 10'
            'kind_id': 'INT NOT NULL'
            'production_year': 'INT'
            'imdb_id': 'INT'
            'phonetic_code': 'CHAR 5'
            'episode_of_id': 'INT'
            'season_nr': 'INT'
            'episode_nr': 'INT'
            'series_years': 'CHAR 10'
            'md5sum': 'CHAR 10'
systems:
  mutable:
    args: >-
      --backend WasmV8
      --no-simd
      --plan-enumerator DPccp
      --cardinality-estimator Injected
      --use-cardinality-file benchmark/result-db-eval/job/q6a_injected_cardinalities.json
    configurations:
      'ResultDB-Heuristic':
        args: >-
          --result-db
        pattern:
          Execution Time: '^Execute machine code:.*'
      'DP_Fold':
        args: >-
          --result-db
          --optimize-result-db
          --dp_fold
        pattern:
          Execution Time: '^Execute machine code:.*'
      'DP_Fold-Greedy':
        args: >-
          --result-db
          --optimize-result-db
          --dp_fold_greedy
        pattern:
          Execution Time: '^Execute machine code:.*'
      'DP_ResultDB':
        args: >-
          --result-db
          --optimize-result-db
          --dp_resultdb
        pattern:
          Execution Time: '^Execute machine code:.*'
      'Decompose':
        args: >-
          --decompose
        pattern:
          Execution Time: '^Execute machine code:.*'
    cases:
      0: SELECT k.keyword,
               n.name,
               t.title
        FROM cast_info AS ci,
             keyword AS k,
             movie_keyword AS mk,
             name AS n,
             title AS t
        WHERE k.keyword = "marvel-cinematic-universe"
          AND t.production_year > 2010
          AND k.id = mk.keyword_id
          AND t.id = mk.movie_id
          AND t.id = ci.movie_id
          AND ci.movie_id = mk.movie_id
          AND n.id = ci.person_id;