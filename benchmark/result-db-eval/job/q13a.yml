description: Optimize Job Query Q13a with RESULTDB
suite: job
benchmark: RESULTDB Optimization times with JOB
name: Q13a
readonly: true
chart:
    x:
        scale: linear
        type: O
        label: Scale factor
    y:
        scale: linear
        type: Q
        label: 'Optimization Time [ms]'
data:                                                     # Definition of the tables this experiment uses.
    'company_name':                                       # Name of this table.
        file: 'benchmark/job/data/company_name.csv'       # Relative path to the file containing the table data
        format: 'csv'                                     # Format of the file. Optional, defaults to 'csv'.
        delimiter: ','                                    # Delimiter of the file. Optional, defaults to ','.
        header: 0                                         # Whether the file has a header line. 1=true, 0=false. Optional, defaults to 0.
        attributes:                                       # Map from attribute name to its type.
            'id': 'INT NOT NULL'
            'name': 'CHAR 32 NOT NULL'
            'country_code': 'CHAR 32 '
            'imdb_id': 'INT'
            'name_pcode_nf': 'CHAR 5'
            'name_pcode_sf': 'CHAR 5'
            'md5sum': 'CHAR 32'
    'company_type': # Name of this table.
      file: 'benchmark/job/data/company_type.csv'       # Relative path to the file containing the table data
      format: 'csv'                                     # Format of the file. Optional, defaults to 'csv'.
      delimiter: ','                                    # Delimiter of the file. Optional, defaults to ','.
      header: 0                                         # Whether the file has a header line. 1=true, 0=false. Optional, defaults to 0.
      attributes: # Map from attribute name to its type.
        'id': 'INT NOT NULL'
        'kind': 'CHAR 32 NOT NULL'
    'info_type':
      file: 'benchmark/job/data/info_type.csv'
      format: 'csv'
      delimiter: ','
      header: 0
      attributes:
        'id': 'INT NOT NULL'
        'info': 'CHAR 32 NOT NULL'
    'kind_type':
      file: 'benchmark/job/data/kind_type.csv'
      format: 'csv'
      delimiter: ','
      header: 0
      attributes:
        'id': 'INT NOT NULL'
        'kind': 'CHAR 15 NOT NULL'
    'movie_companies':
      file: 'benchmark/job/data/movie_companies.csv'
      format: 'csv'
      delimiter: ','
      header: 0
      attributes:
        'id': 'INT NOT NULL'
        'movie_id': 'INT NOT NULL'
        'company_id': 'INT NOT NULL'
        'company_type_id': 'INT NOT NULL'
        'note': 'CHAR 32'
    'movie_info':
      file: 'benchmark/job/data/movie_info.csv'
      format: 'csv'
      delimiter: ','
      header: 0
      attributes:
        'id': 'INT NOT NULL'
        'movie_id': 'INT NOT NULL'
        'info_type_id': 'INT NOT NULL'
        'info': 'CHAR 32 NOT NULL'
        'note': 'CHAR 19'
    'movie_info_idx':
      file: 'benchmark/job/data/movie_info_idx.csv'
      format: 'csv'
      delimiter: ','
      header: 0
      attributes:
        'id': 'INT NOT NULL'
        'movie_id': 'INT NOT NULL'
        'info_type_id': 'INT NOT NULL'
        'info': 'CHAR 10 NOT NULL'
        'note': 'CHAR 1'
    'title':
        file: 'benchmark/job/data/title.csv'
        format: 'csv'
        delimiter: ','
        header: 0
        attributes:
            'id': 'INT NOT NULL'
            'title': 'CHAR 32 NOT NULL'
            'imdb_index': 'CHAR 12'
            'kind_id': 'INT NOT NULL'
            'production_year': 'INT'
            'imdb_id': 'INT'
            'phonetic_code': 'CHAR 5'
            'episode_of_id': 'INT'
            'season_nr': 'INT'
            'episode_nr': 'INT'
            'series_years': 'CHAR 32'
            'md5sum': 'CHAR 32'
systems:
  mutable:
    args: >-
      --backend WasmV8
      --no-simd
      --plan-enumerator DPccp
      --cardinality-estimator Injected
      --use-cardinality-file benchmark/result-db-eval/job/q13a_injected_cardinalities.json
    configurations:
      'ResultDB-Heuristic':
        args: >-
          --result-db
        pattern:
          Execution Time: '^Execute machine code:.*'
      'DP_Fold':
        args: >-
          --result-db
          --optimize-result-db
          --dp_fold
        pattern:
          Execution Time: '^Execute machine code:.*'
      'DP_Fold-Greedy':
        args: >-
          --result-db
          --optimize-result-db
          --dp_fold_greedy
        pattern:
          Execution Time: '^Execute machine code:.*'
      'DP_ResultDB':
        args: >-
          --result-db
          --optimize-result-db
          --dp_resultdb
        pattern:
          Execution Time: '^Execute machine code:.*'
      'Decompose':
        args: >-
          --decompose
        pattern:
          Execution Time: '^Execute machine code:.*'
    cases:
      0: SELECT mi.info,
               miidx.info,
               t.title
          FROM company_name AS cn,
               company_type AS ct,
               info_type AS it,
               info_type AS it2,
               kind_type AS kt,
               movie_companies AS mc,
               movie_info AS mi,
               movie_info_idx AS miidx,
               title AS t
          WHERE cn.country_code = "[de]"
                AND ct.kind = "production companies"
                AND it.info = "rating"
                AND it2.info = "release dates"
                AND kt.kind = "movie"
                AND mi.movie_id = t.id
                AND it2.id = mi.info_type_id
                AND kt.id = t.kind_id
                AND mc.movie_id = t.id
                AND cn.id = mc.company_id
                AND ct.id = mc.company_type_id
                AND miidx.movie_id = t.id
                AND it.id = miidx.info_type_id
                AND mi.movie_id = miidx.movie_id
                AND mi.movie_id = mc.movie_id
                AND miidx.movie_id = mc.movie_id;