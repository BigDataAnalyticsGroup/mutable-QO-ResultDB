description: Optimize synthetic Cycle Schema Query with RESULTDB
suite: synthetic
benchmark: RESULTDB Optimization + Execution times with synthetic cycle schema
name: Exp9
readonly: true
chart:
    x:
        scale: linear
        type: O
        label: Scale factor
    y:
        scale: linear
        type: Q
        label: 'Optimization Time [ms]'
data:                                                     # Definition of the tables this experiment uses.
    'rel_0': # Name of this table.
      file: 'benchmark/job/result-db-eval/synthetic/data2/fact.csv'       # Relative path to the file containing the table data
      format: 'csv'                                     # Format of the file. Optional, defaults to 'csv'.
      delimiter: ','                                    # Delimiter of the file. Optional, defaults to ','.
      header: 0                                         # Whether the file has a header line. 1=true, 0=false. Optional, defaults to 0.
      attributes: # Map from attribute name to its type.
        'id_0': 'INT NOT NULL'
        'id_1': 'INT NOT NULL'
        'word': 'CHAR 100 NOT NULL'
    'rel_1': # Name of this table.
      file: 'benchmark/job/result-db-eval/synthetic/data2/dim.csv'       # Relative path to the file containing the table data
      format: 'csv'                                     # Format of the file. Optional, defaults to 'csv'.
      delimiter: ','                                    # Delimiter of the file. Optional, defaults to ','.
      header: 0                                         # Whether the file has a header line. 1=true, 0=false. Optional, defaults to 0.
      attributes: # Map from attribute name to its type.
        'id': 'INT NOT NULL'
        'fk': 'INT NOT NULL'
        'word': 'CHAR 100 NOT NULL'
    'rel_7': # Name of this table.
      file: 'benchmark/job/result-db-eval/synthetic/data2/dim.csv'       # Relative path to the file containing the table data
      format: 'csv'                                     # Format of the file. Optional, defaults to 'csv'.
      delimiter: ','                                    # Delimiter of the file. Optional, defaults to ','.
      header: 0                                         # Whether the file has a header line. 1=true, 0=false. Optional, defaults to 0.
      attributes: # Map from attribute name to its type.
        'id': 'INT NOT NULL'
        'fk': 'INT NOT NULL'
        'word': 'CHAR 100 NOT NULL'
    'rel_2': # Name of this table.
      file: 'benchmark/job/result-db-eval/synthetic/data2/add.csv'       # Relative path to the file containing the table data
      format: 'csv'                                     # Format of the file. Optional, defaults to 'csv'.
      delimiter: ','                                    # Delimiter of the file. Optional, defaults to ','.
      header: 0                                         # Whether the file has a header line. 1=true, 0=false. Optional, defaults to 0.
      attributes: # Map from attribute name to its type.
        'id': 'INT NOT NULL'
        'word': 'CHAR 100 NOT NULL'
    'rel_3': # Name of this table.
      file: 'benchmark/job/result-db-eval/synthetic/data2/add.csv'       # Relative path to the file containing the table data
      format: 'csv'                                     # Format of the file. Optional, defaults to 'csv'.
      delimiter: ','                                    # Delimiter of the file. Optional, defaults to ','.
      header: 0                                         # Whether the file has a header line. 1=true, 0=false. Optional, defaults to 0.
      attributes: # Map from attribute name to its type.
        'id': 'INT NOT NULL'
        'word': 'CHAR 100 NOT NULL'
    'rel_4': # Name of this table.
      file: 'benchmark/job/result-db-eval/synthetic/data2/add.csv'       # Relative path to the file containing the table data
      format: 'csv'                                     # Format of the file. Optional, defaults to 'csv'.
      delimiter: ','                                    # Delimiter of the file. Optional, defaults to ','.
      header: 0                                         # Whether the file has a header line. 1=true, 0=false. Optional, defaults to 0.
      attributes: # Map from attribute name to its type.
        'id': 'INT NOT NULL'
        'word': 'CHAR 100 NOT NULL'
    'rel_5': # Name of this table.
      file: 'benchmark/job/result-db-eval/synthetic/data2/add.csv'       # Relative path to the file containing the table data
      format: 'csv'                                     # Format of the file. Optional, defaults to 'csv'.
      delimiter: ','                                    # Delimiter of the file. Optional, defaults to ','.
      header: 0                                         # Whether the file has a header line. 1=true, 0=false. Optional, defaults to 0.
      attributes: # Map from attribute name to its type.
        'id': 'INT NOT NULL'
        'word': 'CHAR 100 NOT NULL'
    'rel_6': # Name of this table.
      file: 'benchmark/job/result-db-eval/synthetic/data2/add.csv'       # Relative path to the file containing the table data
      format: 'csv'                                     # Format of the file. Optional, defaults to 'csv'.
      delimiter: ','                                    # Delimiter of the file. Optional, defaults to ','.
      header: 0                                         # Whether the file has a header line. 1=true, 0=false. Optional, defaults to 0.
      attributes: # Map from attribute name to its type.
        'id': 'INT NOT NULL'
        'word': 'CHAR 100 NOT NULL'


systems:
    mutable:
        args: >-
          --backend WasmV8
          --no-simd
          --plan
          --plan-enumerator DPccp
          -t
          --cardinality-estimator Injected
          --use-cardinality-file benchmark/result-db-eval/synthetic/experiments_cycle/9_injected_cardinalities.json
        configurations:
          'ResultDB-Heuristic':
            args: >-
              --result-db
            pattern:
              Execution Time: '^Execute machine code:.*'
          'DP_Fold':
            args: >-
              --result-db
              --optimize-result-db
              --dp_fold
            pattern:
              Execution Time: '^Execute machine code:.*'
          'DP_Fold-Greedy':
            args: >-
              --result-db
              --optimize-result-db
              --dp_fold_greedy
            pattern:
              Execution Time: '^Execute machine code:.*'
          'DP_ResultDB':
            args: >-
              --result-db
              --optimize-result-db
              --dp_resultdb
            pattern:
              Execution Time: '^Execute machine code:.*'
          'Decompose':
            args: >-
              --decompose
            pattern:
              Execution Time: '^Execute machine code:.*'
        cases:
            9:  SELECT *
                FROM rel_0 AS r_0, rel_1 AS r_1, rel_2 AS r_2, rel_3 AS r_3, rel_4 AS r_4, rel_5 AS r_5, rel_6 AS r_6, rel_7 AS r_7
                WHERE r_0.id_0=r_1.id AND r_1.fk=r_2.id AND r_2.id=r_3.id AND r_3.id=r_4.id AND r_4.id=r_5.id AND r_5.id=r_6.id
                      AND r_6.id=r_7.fk AND r_0.id_0 < 200;